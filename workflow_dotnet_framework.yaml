# App and Azure Services setup:
# PTG_PRODUCTION_APP_NAME - application's production(working) name without path
# PTG_USER_APP_NAME       - application's user displaying name without path
# PTG_STORAGE_ACCOUNT     - name of starage in Azure Storage
# PTG_STORAGE_NAME        - name of a storage folder from Azure Srorage Account 

name: Build and Deploy to Azure Blob 

env:
  PTG_PRODUCTION_APP_NAME: _
  PTG_USER_APP_NAME: _
  PTG_STORAGE_ACCOUNT: _
  PTG_STORAGE_NAME: _
 
on:
  push:
    branches:
      - main
      - master
      - development
      - develop

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1
        
      - name: Build Solution
        run: msbuild "$env:PTG_PRODUCTION_APP_NAME.sln" /p:Configuration=Release

      - name: Get Application Version
        run: |
          $match = Select-String -Path "$env:PTG_PRODUCTION_APP_NAME/Properties/AssemblyInfo.cs" `
              -Pattern 'AssemblyFileVersion\("(\d+\.\d+\.\d+\.\d+)"\)'
          if ($match.Matches.Count -gt 0) {
              $version = $match.Matches[0].Groups[1].Value
              echo "APP_VERSION=$version" >> $env:GITHUB_ENV
          } else {
              echo "Error: Version not found!" 
              exit 1
          }
        shell: pwsh

      - name: Get Repository URL & Commit Message
        run: |
          echo "REPO_URL=${{ github.server_url }}/${{ github.repository }}" >> $GITHUB_ENV
          echo "COMMIT_MESSAGE=$(git log -1 --pretty=%B)" >> $GITHUB_ENV
        shell: bash
      
      - name: Azure Login
        run: az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}
        shell: pwsh
      
      - name: Upload to Azure Storage
        run: |
            $folderName = "$env:PTG_PRODUCTION_APP_NAME-$(New-Guid)"        
            $result = az storage blob upload-batch `
                --account-name $env:PTG_STORAGE_ACCOUNT `
                --account-key ${{ secrets.AZURE_STORAGE_KEY }} `
                --destination $env:PTG_STORAGE_NAME/$folderName `
                --source $env:PTG_PRODUCTION_APP_NAME/bin/Release 
            $blobUrl = "https://$env:PTG_STORAGE_ACCOUNT.blob.core.windows.net/$env:PTG_STORAGE_NAME/$folderName"
            echo "BLOB_URL=$blobUrl" >>  $env:GITHUB_ENV
            Write-Host "Upload Result: $result"
            Write-Host "Uploaded to folder: $folderName"
            Write-Host "BLOB_URL=$blobUrl"
        shell: pwsh

      - name: Call Azure Function
        run: |
            $payload = @{
                ApplicationBuildProductionName = "$env:PTG_PRODUCTION_APP_NAME"
                ApplicationBuildUserName = "$env:PTG_USER_APP_NAME"
                ApplicationBuildBlobPath = "${{ env.BLOB_URL }}"
                Version = "${{ env.APP_VERSION }}"
                RepositoryUrl = "${{ env.REPO_URL }}"
                ChangeLog = "${{ env.COMMIT_MESSAGE }}"
            } | ConvertTo-Json -Depth 3

            $response = Invoke-RestMethod -Uri ${{ secrets.AZURE_FUNCTION_URL }} -Method Post -Body $payload
            Write-Host "Response from Azure Function: $($response)"        
        shell: pwsh