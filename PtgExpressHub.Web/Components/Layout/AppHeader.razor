@using Microsoft.AspNetCore.Components.Authorization

@inject AuthService _authService;
@inject NavigationManager NavigationManager;

@rendermode @(new InteractiveServerRenderMode(prerender: false))

<div class="header-container">
    <div class="header-base">
        <img class="header-base-image" src="/apps.png" />
        <p class="header-base-label">Ptg Express Hub</p>
    </div>          
    <div class="header-user">
        <div class="header-user-social" style="display: none">
            <p class="header-user-social-label">автор</p>
            <img class="header-user-social-image" src="/telegram.png" />
        </div>
        @if (IsAuthorized)
        {
            <input type="button" value="Выйти" class="ptg-button header-user-logout hide-mark" @onclick="(e) => OnClick(e)" />
        }
    </div>      
</div>

@code {
    public bool IsAuthorized { get; set; } = false;

    protected override void OnInitialized()
    {
        IsAuthorized = !NavigationManager.Uri.Contains("/auth/login");

        NavigationManager.LocationChanged += OnLocationChanged;
    }

    public void OnClick(MouseEventArgs e)
    {
        NavigationManager.NavigateTo("/auth/logout", true);
    }

    private void OnLocationChanged(object sender, LocationChangedEventArgs e)
    {
        IsAuthorized = !e.Location.Contains("/auth/login");
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
